{{- $port := .Values.deployments.web.port | default 80 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-monitor-service
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-monitor-service
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-monitor-service
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: monitor
    spec:
      containers:
        - name: monitor
          image: stormix/huginn-monitor:latest
          ports:
            - containerPort: {{ $port }}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
          {{- if .Values.deployments.web.readinessProbePath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployments.web.readinessProbePath }}
              port: {{ $port }}
          {{- end }}
          # NOTE: We avoid putting a limit on CPU since Kubernetes throttling kills performance and CPU averages
          # tends to be low, so we can allow some pods to burst when needed. Adjust as you see fit.
          resources:
            requests:
              memory: {{ .Values.deployments.web.memory }}
              cpu: {{ .Values.deployments.web.cpu }}
            limits:
              memory: {{ .Values.deployments.web.memory }}
          envFrom: {{ .Values.envFrom | toYaml | nindent 12 }}
          env:
            {{- if .Values.env }}
            {{- .Values.env | toYaml | nindent 12 }}
            {{- end }}
            {{- if .Values.deployments.web.env }}
            {{- .Values.deployments.web.env | toYaml | nindent 12 }}
            {{- end }}
            - name: PORT
              value: "{{ $port }}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-collector-service
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-collector-service
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-collector-service
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: collector
    spec:
      containers:
        - name: collector
          image: stormix/huginn-collector:latest
          ports:
            - containerPort: {{ $port }}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
          {{- if .Values.deployments.web.readinessProbePath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployments.web.readinessProbePath }}
              port: {{ $port }}
          {{- end }}
          # NOTE: We avoid putting a limit on CPU since Kubernetes throttling kills performance and CPU averages
          # tends to be low, so we can allow some pods to burst when needed. Adjust as you see fit.
          resources:
            requests:
              memory: {{ .Values.deployments.web.memory }}
              cpu: {{ .Values.deployments.web.cpu }}
            limits:
              memory: {{ .Values.deployments.web.memory }}
          envFrom: {{ .Values.envFrom | toYaml | nindent 12 }}
          env:
            {{- if .Values.env }}
            {{- .Values.env | toYaml | nindent 12 }}
            {{- end }}
            {{- if .Values.deployments.web.env }}
            {{- .Values.deployments.web.env | toYaml | nindent 12 }}
            {{- end }}
            - name: PORT
              value: "{{ $port }}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-writer-service
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-writer-service
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-writer-service
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: writer
    spec:
      containers:
        - name: writer
          image: stormix/huginn-writer:latest
          ports:
            - containerPort: {{ $port }}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
          {{- if .Values.deployments.web.readinessProbePath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployments.web.readinessProbePath }}
              port: {{ $port }}
          {{- end }}
          # NOTE: We avoid putting a limit on CPU since Kubernetes throttling kills performance and CPU averages
          # tends to be low, so we can allow some pods to burst when needed. Adjust as you see fit.
          resources:
            requests:
              memory: {{ .Values.deployments.web.memory }}
              cpu: {{ .Values.deployments.web.cpu }}
            limits:
              memory: {{ .Values.deployments.web.memory }}
          envFrom: {{ .Values.envFrom | toYaml | nindent 12 }}
          env:
            {{- if .Values.env }}
            {{- .Values.env | toYaml | nindent 12 }}
            {{- end }}
            {{- if .Values.deployments.web.env }}
            {{- .Values.deployments.web.env | toYaml | nindent 12 }}
            {{- end }}
            - name: PORT
              value: "{{ $port }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-flaresolverr
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.deployments.web.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-flaresolverr
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-flaresolverr
      annotations:
        linkerd.io/inject: enabled
        kubectl.kubernetes.io/default-container: flaresolverr
    spec:
      containers:
        - name: flaresolverr
          image: ghcr.io/flaresolverr/flaresolverr:latest
          ports:
            - containerPort: 8191
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
          resources:
            requests:
              memory: {{ .Values.deployments.web.memory }}
              cpu: {{ .Values.deployments.web.cpu }}
            limits:
              memory: {{ .Values.deployments.web.memory }}
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_HTML
              value: "false"
            - name: TZ
              value: "Europe/London"
---
# Services for each deployment
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-monitor
spec:
  type: ClusterIP
  ports:
    - port: {{ $port }}
      targetPort: {{ $port }}
      protocol: TCP
  selector:
    app: {{ .Chart.Name }}-monitor-service
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-collector
spec:
  type: ClusterIP
  ports:
    - port: {{ $port }}
      targetPort: {{ $port }}
      protocol: TCP
  selector:
    app: {{ .Chart.Name }}-collector-service
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-writer
spec:
  type: ClusterIP
  ports:
    - port: {{ $port }}
      targetPort: {{ $port }}
      protocol: TCP
  selector:
    app: {{ .Chart.Name }}-writer-service
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-flaresolverr
spec:
  type: ClusterIP
  ports:
    - port: 8191
      targetPort: 8191
      protocol: TCP
  selector:
    app: {{ .Chart.Name }}-flaresolverr
